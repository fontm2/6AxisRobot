<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!-- The TabControl's Style. -->
    <Style x:Key="CustomTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- The Style for TabItems (strips). -->
    <Style x:Key="CustomTabItem" TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Width" Value="120"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <!-- The Grid helps defining the general height of TabItems. -->
                    <Grid Height="25" VerticalAlignment="Bottom">
                        <!--
                        The important aspect here is that the bottom of the Border is 0px thick,
                        helping the TabItem/strip to blend into the TabPage.
                     -->  
                        <Border Name="TabItemBorder" BorderBrush="White" Background="Black" Margin="1" BorderThickness="2,1,1,0" CornerRadius="3,3,0,0">
                            <!-- This is where the Content of the TabItem will be rendered. -->
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="7,2,12,2" RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- The appearance of a TabItem when it's inactive/unselected -->
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Panel.ZIndex" Value="90" />
                            <Setter TargetName="TabItemBorder" Property="BorderBrush"
                                Value="Gray" />
                            <Setter Property="Foreground"
                                Value="WhiteSmoke" />
                            <!-- Except for the selected TabItem, tabs are to appear smaller in height. -->
                            <Setter TargetName="TabItemBorder" Property="Margin"
                                Value="0,4,0,0"/>
                        </Trigger>
                        
                        <!-- The appearance of a TabItem when the mouse hovers over it -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Border.IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="99" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="BorderBrush" TargetName="TabItemBorder" Value="White" />
                            <Setter TargetName="TabItemBorder" Property="BorderThickness" Value="2,1,1,1" />
                            <Setter Property="Background" TargetName="TabItemBorder" Value="Black"/>
                            <Setter Property="Opacity" TargetName="TabItemBorder" Value="0.5"/>
                            <!--
                           To further increase the hover-effect, extend the TabItem's height a little
                           more compared to unselected TabItems.
                        -->
                            <Setter TargetName="TabItemBorder" Property="Margin" Value="0,2,0,0"/>
                        </MultiTrigger>

                        <!-- The appearance of a TabItem when it's active/selected -->
                        <Trigger Property="IsSelected" Value="True">
                            <!-- We want the selected TabItem to always be on top. -->
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="TabItemBorder" Property="BorderBrush" Value="White" />
                            <Setter TargetName="TabItemBorder" Property="Background" Value="Black" />
                            <Setter TargetName="TabItemBorder" Property="BorderThickness" Value="2,1,1,0" />
                            <Setter Property="Foreground" Value="White"/>
                            <Setter TargetName="TabItemBorder" Property="Margin" Value="2,0,2,0"/>
                        </Trigger>
                       
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>