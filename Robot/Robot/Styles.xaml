<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
 

    <!--TextBox-->
    <SolidColorBrush x:Name="TextColor" x:Key="ForegroundColor" Color="White"/>
    <Style x:Key="CustomTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Height" Value="25" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SelectionBrush" Value="White" />
        <Setter Property="SelectionOpacity" Value="0.3" />
        <Setter Property="CaretBrush" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
            <ControlTemplate TargetType="{x:Type TextBoxBase}">
                <Border Name="Border" CornerRadius="2" Padding="2" BorderThickness="1">
                    <Border.Background>
                            <SolidColorBrush Color="White" Opacity="0.3"/>
                    </Border.Background>
                    <Border.BorderBrush>
                        <SolidColorBrush Color="AntiqueWhite" />
                    </Border.BorderBrush>
                    <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
            </ControlTemplate>
        </Setter.Value>
        </Setter>
    </Style>

    <!--Button-->
    <Style x:Key="Custombutton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Height" Value="25" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid>
                        <Border x:Name="WhiteRectangle" CornerRadius="2" Background="{TemplateBinding Background}"></Border>
                        <Border x:Name="DarkRectangle" Background="{DynamicResource DarkBackground}" CornerRadius="1" Margin="1" Opacity="1"></Border>

                        <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter Property="Button.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="White" ShadowDepth="0" BlurRadius="30" Opacity="0.7" />
                                    <!--<DropShadowEffect Color="White" Direction="320" ShadowDepth="5" BlurRadius="10" Opacity="0.7" />-->
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="Foreground" Value="OrangeRed" />
                        </Trigger>
                        <Trigger Property="Button.IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="WhiteRectangle" Value="Red"/>
                            <Setter Property="Background" TargetName="DarkRectangle" Value="Black"/>
                            <Setter Property="Foreground" Value="DimGray"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{DynamicResource GlowOut}">
                                </BeginStoryboard>
                                <!--<BeginStoryboard Storyboard="{DynamicResource ChangeTextColorOut}">
                                </BeginStoryboard>-->
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{DynamicResource GlowIn}">
                                </BeginStoryboard>
                                <!--<BeginStoryboard Storyboard="{DynamicResource ChangeTextColorIn}">
                                </BeginStoryboard>-->
                            </EventTrigger.Actions>
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StopButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Salmon" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid>
                        <Border x:Name="WhiteRectangle" CornerRadius="2" Background="{TemplateBinding Background}"></Border>
                        <Border x:Name="DarkRectangle" Background="{DynamicResource RedBackground}" CornerRadius="1" Margin="1" Opacity="1"></Border>

                        <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter Property="Button.Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="LightCoral" ShadowDepth="0" BlurRadius="30" Opacity="0.7" />
                                    <!--<DropShadowEffect Color="White" Direction="320" ShadowDepth="5" BlurRadius="10" Opacity="0.7" />-->
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="Foreground" Value="OrangeRed" />
                        </Trigger>
                        <Trigger Property="Button.IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="WhiteRectangle" Value="Red"/>
                            <Setter Property="Background" TargetName="DarkRectangle" Value="Black"/>
                            <Setter Property="Foreground" Value="DimGray"/>
                        </Trigger>

                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{DynamicResource GlowOut}">
                                </BeginStoryboard>
                                <!--<BeginStoryboard Storyboard="{DynamicResource ChangeTextColorOut}">
                                </BeginStoryboard>-->
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{DynamicResource GlowIn}">
                                </BeginStoryboard>
                                <!--<BeginStoryboard Storyboard="{DynamicResource ChangeTextColorIn}">
                                </BeginStoryboard>-->
                            </EventTrigger.Actions>
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboboxItem-->
    <Style TargetType="{x:Type ComboBoxItem}" x:Key="ItemStyle">
        <Setter Property="Background" Value="Black" />
    </Style>

    <Style x:Key="CustomCombobox" TargetType="ComboBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Style.Triggers>
            <Trigger Property="ComboBox.IsEnabled" Value="False">
                <Setter Property="Background" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--ComboboxNew-->
    <Style TargetType="{x:Type ComboBoxItem}" x:Key="ItemStyle2">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontStyle" Value="Italic" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Border" Padding="2" Margin="2" BorderThickness="2" CornerRadius="0" Background="Black" BorderBrush="Transparent" >
                        <TextBlock TextAlignment="Center">
                            <ContentPresenter />
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="White"/>
                            <Setter TargetName="Border" Property="Background" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="32" />
                        </Grid.ColumnDefinitions>
                        <Border
                          x:Name="Border"
                          Grid.ColumnSpan="2"
                          CornerRadius="0"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="2" />
                        <Border
                          Grid.Column="0"
                          CornerRadius="0"
                          Background="Transparent"
                          BorderBrush="Transparent"
                          BorderThickness="10" />
                        <Path
                          x:Name="Arrow"
                          Grid.Column="1"    
                          Fill="{TemplateBinding Foreground}"
                          Stroke="{TemplateBinding Foreground}"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M 0 0 L 8 12 L 16 0 Z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="Black" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="WhiteSmoke" />
                            <Setter Property="Foreground" Value="Blue"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="Red" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="True" />
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}" x:Key="CustomCombobox2">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="Background" Value="Black" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}" Style="{StaticResource ComboBoxToggleButton}" Grid.Column="2"
                                Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
                                Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="10,3,30,3" VerticalAlignment="Center" HorizontalAlignment="Center">
                        </ContentPresenter>
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}"
                                HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3,3,23,3"
                                Focusable="True" Visibility="Hidden"  IsReadOnly="{TemplateBinding IsReadOnly}">
                        </TextBox>
                        <!--Border von Popup bestimmt mit seinem Background Property die Hintergrundfarbe des Menus das aufpot wwenn man den ToggleButton clickt.-->
                        <!--die Farbe der BorderBrush und Background von den ComboBoxItem überfärbt das Gante aber; die Grundfarbe(BorderBackground vom Popup) kommt nur bei Padding, Margin oder Transparenten Teilen des ComboBoxItems zum vorschein-->
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="Black" BorderThickness="2" BorderBrush="Gray">
                                </Border>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    <!--ComboboxNew-->
</ResourceDictionary>